// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatmsg

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type MessageNestField2 struct {
	_tab flatbuffers.Table
}

func GetRootAsMessageNestField2(buf []byte, offset flatbuffers.UOffsetT) *MessageNestField2 {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &MessageNestField2{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsMessageNestField2(buf []byte, offset flatbuffers.UOffsetT) *MessageNestField2 {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &MessageNestField2{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *MessageNestField2) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *MessageNestField2) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *MessageNestField2) Field3() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MessageNestField2) Field4() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func MessageNestField2Start(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func MessageNestField2AddField3(builder *flatbuffers.Builder, field3 flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(field3), 0)
}
func MessageNestField2AddField4(builder *flatbuffers.Builder, field4 flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(field4), 0)
}
func MessageNestField2End(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
